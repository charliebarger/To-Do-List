{"version":3,"sources":["webpack://to-dolist/./src/Projectfolders.js","webpack://to-dolist/./src/burgerMenu.js","webpack://to-dolist/./src/createNewProject.js","webpack://to-dolist/./src/index.js","webpack://to-dolist/./src/projectTextfield.js","webpack://to-dolist/webpack/bootstrap","webpack://to-dolist/webpack/runtime/define property getters","webpack://to-dolist/webpack/runtime/hasOwnProperty shorthand","webpack://to-dolist/webpack/runtime/make namespace object","webpack://to-dolist/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvDA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;AAEO;AACP;AACA;AACA;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA,C;;;;;;;;;;;;;;ACnCyC;AACK;AACU;AACxD;AACA,yDAAY;AACZ;AACA,+DAAa;AACb,yEAAqB;;;;;;;;;;;;;;;;;ACP8D;AACjC;;AAE3C;AACP;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA,QAAQ,0DAAS,CAAC,yEAAwB;AAC1C,QAAQ,mEAAe;AACvB;AACA;AACA,QAAQ,+DAAa;AACrB;AACA;;AAEA;AACA;AACA;;AAEA,2E;AACA;AACA,CAAC;;;;;;;UClCD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"main.js","sourcesContent":["function addProjectFolderEvents(nodeList){\n    nodeList.forEach(node => {\n        addClickListners(nodeList, node)\n        addHoverEffect(node, 'hover-x', node.lastElementChild)\n    })\n}\n\n//call functions on click\nfunction addClickListners(nodeList, item){\n    item.addEventListener('click', () => {\n    loopItems(nodeList)\n    addClasses(item,'selected-project')\n    addClasses(item.lastElementChild, 'show-x')\n  })\n}\n\n//loop through items and call removeClasses on each\nfunction loopItems(nodeList){\n    console.log(nodeList)\n    nodeList.forEach(node => {\n        removeClasses(node.lastElementChild, 'show-x' )\n        removeClasses(node, 'selected-project')\n    })\n}\n\n//uses mouseover and mouseleave to create a hover effect. The mouseover can be on one element and effect another\nfunction addHoverEffect(itemHovered, CSSclass, itemWitheffect = itemHovered){\n   itemHovered.addEventListener('mouseover', () => {\n       itemWitheffect.classList.add(CSSclass)\n   })\n   itemHovered.addEventListener('mouseleave', () => {\n    itemWitheffect.classList.remove('hover-x')\n  })\n}\n\n//if an item contains a class remove that class\nfunction removeClasses(item, CSSclass){\n    if (item.classList.contains(CSSclass)){\n        item.classList.remove(CSSclass)\n    }\n}\n\n//adds css classes\nfunction addClasses(item, CSSclass){\n    item.classList.add(CSSclass)\n}\n\nfunction updateFolders() {\n    let projectFolders = updateProjectFoldersList()\n    addProjectFolderEvents(projectFolders)\n}\n\nfunction updateProjectFoldersList() {\n    let projectFolders = document.querySelectorAll('.project-folder');\n    return projectFolders\n}\n\n\n\n\nexport {updateFolders, loopItems, updateProjectFoldersList}","let burger = document.querySelector('.hamburger');\nlet navBar = document.querySelector('nav');\n\nfunction toggleClassOnEvent(eventKey ,className, item = eventKey){\n  eventKey.addEventListener('click', ()  => {\n    item.classList.toggle(className)\n})\n}\n\nexport function addMenuEvent(){\n    toggleClassOnEvent(burger, 'closed')\n    toggleClassOnEvent(burger, 'active', navBar)\n}\n\n","class newProject{\n    constructor(title){\n        this.title = title\n    }\n\n    createWrapper() {\n        let parent = document.querySelector('.project-list')\n        let wrapper = document.createElement('div');\n        wrapper.classList.add(\"list-wrapper\", \"project-folder\", \"hover-project\", \"selected-project\")\n        parent.appendChild(wrapper)\n        return wrapper\n    }\n\n    createTitle(){\n        let content = document.createElement('li')\n        content.textContent = this.title\n        return content\n    }\n\n    createDelete(){\n        let deleteButton = document.createElement('div');\n        deleteButton.classList.add(\"delete-icon\", \"show-x\")\n        return deleteButton\n    }\n\n    createNewProject(){\n        let wrapper = this.createWrapper()\n        wrapper.append(this.createTitle(), this.createDelete() )\n        \n    }\n}\n\nexport function createNewFolder(title) {\n    let folderProject = new newProject(title)\n    folderProject.createNewProject()\n}","import {addMenuEvent} from \"./burgerMenu\"\nimport {updateFolders} from \"./Projectfolders\"\nimport {callAddProjectListner} from \"./projectTextfield\"\n//burger icon//\naddMenuEvent()\n//hover and click project//\nupdateFolders()\ncallAddProjectListner()\n","import {loopItems, updateFolders, updateProjectFoldersList} from \"./Projectfolders\"\nimport {createNewFolder} from \"./createNewProject\"\n\nexport function callAddProjectListner() {\n    let project = document.getElementById('add-project')\n    let addButton = document.getElementById(\"add-project-button\")\n\n    addButton.addEventListener('click', () => {\n    addInputedProject(project)\n})\n    project.addEventListener('keydown', function(e){\n    if(e.key == 'Enter'){\n        addInputedProject(project)\n    }\n})\n}\n\nfunction addInputedProject(textField) {\n    if (textField.value){\n        //delete all current projects and delete selection classes\n        loopItems(updateProjectFoldersList())\n        createNewFolder(textField.value)\n        clearInput(textField)\n        //add event listners to new projects\n        updateFolders()\n    }\n}\n\nfunction clearInput(textField) {\n    textField.value = '';\n}\n\ndocument.getElementById('new-project').addEventListener('on', function(e) { \n    e.preventDefault()\n})\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}